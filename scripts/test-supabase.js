// Script de test pour v√©rifier la connexion Supabase
// Ex√©cuter avec: node scripts/test-supabase.js

const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Variables d\'environnement Supabase manquantes');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function testConnection() {
  console.log('üîç Test de connexion Supabase...\n');

  try {
    // Test 1: Connexion de base
    console.log('1. Test de connexion...');
    const { data, error } = await supabase.from('categories').select('count');
    if (error) throw error;
    console.log('‚úÖ Connexion r√©ussie\n');

    // Test 2: V√©rifier les tables
    console.log('2. V√©rification des tables...');
    const tables = ['profiles', 'categories', 'vendors', 'products', 'cart_items', 'wishlist', 'orders'];
    
    for (const table of tables) {
      try {
        const { error } = await supabase.from(table).select('*').limit(1);
        if (error) throw error;
        console.log(`‚úÖ Table ${table} existe`);
      } catch (err) {
        console.log(`‚ùå Table ${table} manquante: ${err.message}`);
      }
    }

    // Test 3: V√©rifier les donn√©es de test
    console.log('\n3. V√©rification des donn√©es de test...');
    const { data: categories } = await supabase.from('categories').select('*');
    console.log(`‚úÖ ${categories?.length || 0} cat√©gories trouv√©es`);

    const { data: products } = await supabase.from('products').select('*');
    console.log(`‚úÖ ${products?.length || 0} produits trouv√©s`);

    const { data: vendors } = await supabase.from('vendors').select('*');
    console.log(`‚úÖ ${vendors?.length || 0} vendeurs trouv√©s`);

    console.log('\nüéâ Tous les tests sont pass√©s !');
    console.log('\nüìù Prochaines √©tapes:');
    console.log('1. D√©marrer le serveur: npm run dev');
    console.log('2. Aller sur http://localhost:3000/auth/register');
    console.log('3. Cr√©er un compte de test');
    console.log('4. Tester la connexion');

  } catch (error) {
    console.error('‚ùå Erreur:', error.message);
    console.log('\nüîß Solutions possibles:');
    console.log('1. V√©rifier que le script SQL a √©t√© ex√©cut√© dans Supabase');
    console.log('2. V√©rifier les cl√©s dans .env.local');
    console.log('3. V√©rifier que RLS est configur√© correctement');
  }
}

testConnection();